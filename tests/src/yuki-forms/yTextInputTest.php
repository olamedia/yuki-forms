<?php

/**
 * Test class for yTextInput.
 * Generated by PHPUnit on 2011-03-25 at 16:21:34.
 */
class yTextInputTest extends PHPUnit_Framework_TestCase{
    /**
     * @var yTextInput
     */
    protected $object;
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(){
        
    }
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(){
        
    }
    /**
     * @todo Implement testGetHtml().
     */
    public function testAll(){
        $input = new yTextInput('title');
        $input->setLabelText('&label');
        $this->assertEquals('<label for="title">&amp;label</label>', strval($input->getLabel()));
        $input->setLabelHtml('<span>label</span>');
        $this->assertEquals('<label for="title">'."\n".'<span>label</span></label>', strval($input->getLabel()));
        $this->assertEquals(array(), $input->getKeys());
        $this->assertEquals('<input type="text" id="title" name="title" value="">', strval($input));
        $input->setValue('-value-');
        $this->assertEquals('<input type="text" id="title" name="title" value="-value-">', strval($input));
        $input->setValue('"value"');
        $this->assertEquals('<input type="text" id="title" name="title" value="&quot;value&quot;">', strval($input));
        $input->setValue('');
        $input->setKey(1);
        $this->assertEquals('<input type="text" id="title-1" name="title[1]" value="">', strval($input));
        $this->assertEquals(1, $input->getKey());
        $this->assertEquals(null, $input->getPrefix());
        $input->setKey("str");
        $this->assertEquals('<input type="text" id="title-str" name="title[\'str\']" value="">', strval($input));
        $input->setKey(true);
        $this->assertEquals('<input type="text" id="title-1" name="title[]" value="">', strval($input));
        $input->setPrefix('my');
        $this->assertEquals('<input type="text" id="my_title-1" name="my_title[]" value="">', strval($input));
        $this->assertEquals('my', $input->getPrefix());
        $this->assertEquals('title', $input->getName());
        $input->setKey(1);
        $input->setPrefix(null);
        $_POST['title'][1] = 'hello';
        $_POST['title'][2] = 'hello2';
        $input->processKey();
        $this->assertEquals('<input type="text" id="title-1" name="title[1]" value="hello">', strval($input));
        $this->assertEquals('hello', $input->getValue());
        $input->setKey(2);
        $input->processKey();
        $this->assertEquals('hello2', $input->getValue());
        $this->assertEquals(array('1','2'), $input->getKeys());
        $_POST['title'][1] = '"hello\'';
        $input->setKey(1);
        $input->processKey();
        $this->assertEquals('<input type="text" id="title-1" name="title[1]" value="&quot;hello\'">', strval($input));
        $input->setKey(null);
        $_POST['title'] = 'hello';
        $input->processKey();
        $this->assertEquals(array(null), $input->getKeys());
        $this->assertEquals('hello', $input->getValue());
    }
}

