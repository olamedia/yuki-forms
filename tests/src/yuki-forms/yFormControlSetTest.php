<?php

class myTestForm1 extends yFormControlSet{
    protected $_controls = array(
        'title'=>array(
            'class'=>'yTextInput',
            'name'=>'subject',
        ),
        'text'=>array(
            'class'=>'yTextInput',
            'name'=>'message',
        ),
    );
}

/**
 * Test class for yFormControlSet.
 * Generated by PHPUnit on 2011-03-26 at 06:31:45.
 */
class yFormControlSetTest extends PHPUnit_Framework_TestCase{
    /**
     * @var yFormControlSet
     */
    protected $object;
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(){
        
    }
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(){
        
    }
    /**
     * @todo Implement testAll().
     */
    public function testAll(){
        $cs = new myTestForm1();
        $title = $cs->getControl('title');
        $this->assertEquals(null, $cs->getKey());
        $this->assertEquals('<input type="text" id="subject" name="subject" value="">', strval($title));
        $cs->setKey(1);
        $this->assertEquals('<input type="text" id="subject-1" name="subject[1]" value="">', strval($title));
        $cs->setPrefix('my');
        $this->assertEquals('my', $cs->getPrefix());
        $this->assertEquals(1, $cs->getKey());
        $this->assertEquals('my', $title->getPrefix());
        $this->assertEquals('<input type="text" id="my_subject-1" name="my_subject[1]" value="">', strval($title));
        $_POST['my_subject'][1] = '"subject"';
        $cs->processKey();
        $this->assertEquals('<input type="text" id="my_subject-1" name="my_subject[1]" value="&quot;subject&quot;">', strval($title));
        $cs->setKey(null);
        $cs->setPrefix(null);
        $_POST['subject'] = '1';
        $_POST['message'] = '2';
        $cs->processKey();
        foreach ($cs as $result){
            $this->assertEquals(array('title'=>'1', 'text'=>'2'), $cs->getValues());
        }
        $this->assertEquals(array('title'=>'1', 'text'=>'2'), $cs->getValues());
        $_POST = array(
            'subject' => array(
                '1' => '3',
                '2' => '3'
            ),
            'message' => array(
                '1' => '4',
                '2' => '4'
            )
        );
        $this->assertEquals(array('1','2'), $cs->getKeys());
        foreach ($cs as $result){
            $title = $cs->getControl('title');
            echo 'key:'.$title->getKey().' ';
            $iterator = $cs->getCurrentIterator();
            var_dump($iterator->key());
            $this->assertEquals(array('title'=>'3', 'text'=>'4'), $result);
        }
        
    }
}

